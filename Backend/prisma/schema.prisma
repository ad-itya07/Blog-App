datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id               Int             @id @default(autoincrement())
  user_name        String          @unique
  user_password    String
  posts            Post[]
  user_profile_pic UserProfilePic?
  votes            Vote[]
  comments         Comment[]
}

model Post {
  id        Int       @id @default(autoincrement())
  title     String
  content   String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  author    User      @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId  Int
  images    Image[]
  votes     Vote[]
  comments  Comment[]
}

model Image {
  id     Int    @id @default(autoincrement())
  url    String
  post   Post   @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId Int
}

model Vote {
  id       Int     @id @default(autoincrement())
  isUpvote Boolean
  postId   Int
  userId   Int
  post     Post    @relation(fields: [postId], references: [id])
  user     User    @relation(fields: [userId], references: [id])

  @@unique([userId, postId])
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  postId    Int
  userId    Int
  post      Post     @relation(fields: [postId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

model UserProfilePic {
  id     Int    @id @default(autoincrement())
  url    String
  user   User?  @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int    @unique
}
